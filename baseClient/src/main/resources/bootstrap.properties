spring.application.name=baseClient
server.port=9000

#nacos注册中心地址
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
#nacos配置中心地址
spring.cloud.nacos.config.server-addr=${spring.cloud.nacos.discovery.server-addr}


#配置开启feign的降级服务
feign.hystrix.enabled=true


#nacos管理配置公用配置文件
spring.cloud.nacos.config.prefix=nacos-config-demo
#默认，可以不写
#spring.cloud.nacos.config.file-extension=properties
#默认，可以不写，不使用group区分可以不写
#spring.cloud.nacos.config.group=DEFAULT_GROUP
#不使用namespace 可以不写
#spring.cloud.nacos.config.namespace=a4d866b0-bce5-4a95-a7c2-9663ddad4c52
#假设现在有这样的一个需求：我们想要对所有应用的Actuator模块以及日志输出做统一的配置管理。所以，我们希望可以将Actuator模块的配置放在独立的配置文件actuator.properties文件中，而对于日志输出的配置放在独立的配置文件log.properties文件中。通过拆分这两类配置内容，希望可以做到配置的共享加载与统一管理。
#spring.cloud.nacos.config.shared-dataids=actuator.properties,log.properties
#spring.cloud.nacos.config.refreshable-dataids=actuator.properties,log.properties



#接口限流注册配置 sentinel dashboard的访问地址，根据上面准备工作中启动的实例配置
spring.cloud.sentinel.transport.dashboard=http://127.0.0.1:8080
#nacos的访问地址，，根据上面准备工作中启动的实例配置
spring.cloud.sentinel.datasource.ds.nacos.server-addr=${spring.cloud.nacos.discovery.server-addr}
#nacos中存储规则的dataId
spring.cloud.sentinel.datasource.ds.nacos.dataId=${spring.application.name}-sentinel
#nacos中存储规则的groupId
spring.cloud.sentinel.datasource.ds.nacos.groupId=DEFAULT_GROUP
#该参数是spring cloud alibaba升级到0.2.2之后增加的配置，用来定义存储的规则类型。
spring.cloud.sentinel.datasource.ds.nacos.rule-type=flow


#消费端dubblo配置
dubbo.protocol.name=dubbo
dubbo.protocol.port=-1
dubbo.registry.address=spring-cloud://localhost
dubbo.cloud.subscribed-services=baseServer
spring.main.allow-bean-definition-overriding=true

#dubbo qs端口冲突配置
dubbo.application.qos.enable=true
dubbo.application.qos.port=9001
dubbo.application.qos.accept.foreign.ip=false