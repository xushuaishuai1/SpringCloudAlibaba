server:
  port: 9100
#配置开启feign的降级服务
feign:
  hystrix:
    enabled: true
spring:
  application:
    name: baseServer
  cloud:
    nacos:
      discovery:
        #nacos注册中心地址
        server-addr: 127.0.0.1:8848
      config:
        #nacos配置中心地址
        server-addr: ${spring.cloud.nacos.discovery.server-addr}
        #nacos管理配置公用配置文件
        prefix: nacos-config-demo
        #默认，可以不写
        file-extension: yml
        #默认，可以不写，不使用group区分可以不写
        #spring.cloud.nacos.config.group=DEFAULT_GROUP
        #不使用namespace 可以不写
        #spring.cloud.nacos.config.namespace=a4d866b0-bce5-4a95-a7c2-9663ddad4c52
        #假设现在有这样的一个需求：我们想要对所有应用的Actuator模块以及日志输出做统一的配置管理。所以，我们希望可以将Actuator模块的配置放在独立的配置文件actuator.properties文件中，而对于日志输出的配置放在独立的配置文件log.properties文件中。通过拆分这两类配置内容，希望可以做到配置的共享加载与统一管理。
        #spring.cloud.nacos.config.shared-dataids=actuator.properties,log.properties
        #spring.cloud.nacos.config.refreshable-dataids=actuator.properties,log.properties
    #接口限流注册配置 sentinel dashboard的访问地址，根据上面准备工作中启动的实例配置
    sentinel:
      transport:
        dashboard: http://127.0.0.1:9090
      #nacos的访问地址，，根据上面准备工作中启动的实例配置
      datasource:
        ds:
          nacos:
            server-addr: ${spring.cloud.nacos.discovery.server-addr}
            #nacos中存储规则的dataId
            dataId: ${spring.application.name}-sentinel
            #nacos中存储规则的groupId
            groupId: DEFAULT_GROUP
            data-type: json
            #该参数是spring cloud alibaba升级到0.2.2之后增加的配置，用来定义存储的规则类型。
            rule-type: flow
  main:
    allow-bean-definition-overriding: true

#服务端dubbo配置
#指定 Dubbo 服务实现类的扫描基准包
dubbo:
  scan:
    base-packages: com.xtm.service
#Dubbo 服务暴露的协议配置，其中子属性 name 为协议名称，port 为协议端口（ -1 表示自增端口，从 20880 开始）
  protocol:
    name: dubbo
    port: -1
# Dubbo 服务注册中心配置，其中子属性 address 的值 “spring-cloud://localhost”，说明挂载到 Spring Cloud 注册中心
  registry:
    address: spring-cloud://localhost
#    check: false
#  consumer:
#    check: false

